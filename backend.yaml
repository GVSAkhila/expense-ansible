- name: configure the backend
  hosts: backend
  become: yes
  vars:
    mysql_passd: ExpenseApp@1
    login_host: mysql.joinsankardevops.online
  tasks:
    - name: disable default nodejs
      ansible.builtin.command:
        cmd: dnf module disable nodejs -y

    - name: enable nodejs 20
      ansible.builtin.command:
        cmd: dnf module enable nodejs:20 -y

    - name: install nodejs and mysql
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - nodejs
        - mysql

    - name: create user
      ansible.builtin.user:
        name: expense

    - name: create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: download the backend code
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip

    - name: extract the code
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes

    - name: install dependencies
      ansible.builtin.command:
        cmd: npm install
      args:
        chdir: /app

    - name: copy the service file
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: install PyMySQL and cryptography using pip
      ansible.builtin.pip:
        name:
          - PyMySQL
          - cryptography
        executable: pip3.9

    - name: import mysql data
      community.mysql.mysql_db:
        login_user: root
        login_password: "{{ mysql_passd }}"
        login_host: "{{ login_host }}"
        target: /app/schema/backend.sql
        name: all
        state: import

    - name: daemon reload and restart backend service
      ansible.builtin.systemd:
        daemon_reload: true
        state: restarted
        name: backend
